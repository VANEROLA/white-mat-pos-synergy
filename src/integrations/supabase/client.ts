
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://qxsxtmsnxbfrbeguifmy.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InF4c3h0bXNueGJmcmJlZ3VpZm15Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDI2NjA2MTQsImV4cCI6MjA1ODIzNjYxNH0.v2Dk9OnY9Gz5LeLwAwfPNdio03VLXcMl7zUqPSIAflI";

// Initialize the Supabase client with proper types
export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY
);

// Initialize inventory table if needed (without using rpc that doesn't exist)
async function initSupabaseTable() {
  try {
    // Check if the table exists first
    const { data, error } = await supabase
      .from('inventory_updates')
      .select('*')
      .limit(1);
    
    // If there's an error and it's because the table doesn't exist, we'll create it
    if (error && error.code === '42P01') { // Code for relation does not exist
      console.log("Table doesn't exist, creating it...");
      // We would need to create the table manually here
      // For now, we'll just log the issue
    } else if (error) {
      console.error("Error checking inventory table:", error);
    }
  } catch (e) {
    console.error("Error initializing Supabase tables:", e);
  }
}

// Call this function when the app starts to ensure the table exists
initSupabaseTable();
